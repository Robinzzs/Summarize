
Record experiences while writing c file to load SMC data

SMC = single chip microcomputer

* 基本数据存储 Basic format of data storage
  数据在计算机中的表示最终都是以二进制的形式存在，最小的
存储单元称为“位bit”，只能存放0或1，称为二进制位，多数计
算机把八个二进制位组成一个“字节byte”，并给每个字节分配
一个地址，例如一个整型数据int：
  一般占4个byte（32bit），最高位代表符号，0表示正数，1表
示负数，取值范围-2147483648~2147483647，在内存中存储为
小字节序：数据的低位存储在内存的低位，数据的高位存储在
数据的高位，即低位在前，高位在后。例如例如0x12345678在
内存中的存储如下：

地址：0x0012ff78　　0x0012ff79　　0x0012ff7a　　0x0012ff7b

数据：　　78　　　　　　56　　　　　　34　　　　　　12

大字节序：数据的低位存储在内存的高位，数据的高位存储在
内存的高位。常用的X86 PC机都是采用小字节序。
而无符号整型unsigned int 最高位同样表示数据，即存储的都
是正整数，取值范围0~4294967295。

各常用类型所用字节数：
            byte         bit
char         1            8       对应ASCII码的值
short        2            16
int          4            32
float        4            32
double       8            64

如 int a = 123456789
十六进制 = 0x075BCD15
		 = (075BCD15)16
二进制   =(00000111|01011011|11001101|00010101)2
		 
内存存储 =(10101000|10110011|11011010|11100000)2		 


* 十六进制与二进制 hexadecimal and binary
  如char c=‘0’= 0x30 =(30)16 =(110000)2 =(00110000)2
char型变量 1byte 8bit，2^8=8^4=16^2=256 即两位十六进制数
可以表示八位二进制数。
(30)16=(0011|0000)2 其中(3)16->(0011)2, (0)16->(0000)2

  对于不同进制的数据在存储时都以二进制形式存储，如何解构数
据关键是看数据的类型或者说数据最小结构的数值范围。

              byte     bit                  value
char           1        8                -128 ~ +127
unsigned char  1        8                   0 ~ 255
short          2        16             -32768 ~ 32768
int            4        32        -2147483648 ~ +2147483648
unsigned int   4        32                  0 ~ 4294967295
long           4        32        -2147483648 ~ +2147483648
float          4        32     3.4 x 10^(-38) ~  3.4 x 10^(+38)
double         8        64    1.7 x 10^(-308) ~  1.7 x 10^(+308)

  对于不同数值范围的数据选用不同的类型长度去截取二进制数据
从而将数据读入。

十六进制数与ASCII码的关系

每个ASCII字符转化成16进制是两位的16进制数，即每两位十六进
制数代表1个ASCII码字符。
字符‘0’ 对应 (30)16
    ‘9’ 对应 (39)16
	'A' 对应 (41)16
	'Z' 对应 (5A)16
	'a' 对应 (61)16
	'z' 对应 (7A)16
	

* char and unsigned char

  首先在计算机存储中，char与unsigned char没有什么不同，都是
一个字节，唯一的区别是，char的最高位为符号位，因此char能表
示-128~127, unsigned char没有符号位，因此能表示0~255，这个
好理解，8个bit，最多256种情况，因此无论如何都能表示256个数
字。在实际使用过程中区别主要是符号位，但是在普通的赋值，读
写文件和网络字节流都没什么区别，反正就是一个字节，不管最高
位是什么，最终的读取结果都一样，只是你怎么理解最高位而已，
在屏幕上面的显示可能不一样。
  在表示byte时，都用unsigned char通常意义上理解，byte没有
什么符号位之说，更重要的是如果将byte的值赋给int，long等数
据类型时，系统会做一些额外的工作。如果是char，那么系统认为
最高位是符号位，而int可能是16或者32位，那么会对最高位进行扩
展（注意，赋给unsigned int也会扩展）而如果是unsigned char，
那么不会扩展。

  8位单片机当中字宽仅有8位，即8bit，也就是8位二进制数，恰好对
应两位十六进制数，因而习惯用十六进制来表示，方便人读写和检
查，而实际文件中数据一直是二进制的形式存在，并没有改变。
